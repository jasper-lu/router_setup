#!/usr/bin/expect

set password "temp" 
spawn telnet 192.168.1.1

#uci set wireless.@wifi-iface[0].mode='';
#uci commit;
#uci set wireless.@wifi-iface[''].ssid=''\r" 

#configures the router propoerties. Changes lan address, turns radio on, turns off SSID...
send "uci set network.lan.ipaddr=192.168.5.1
uci set wireless.radio0.disabled=0
uci set wireless.@wifi-iface\\\[0\\].ssid=''
uci set wireless.@wifi-iface\\\[0\\].mode=''
wifi detect > /etc/config/wireless\r"

#Has user enter password to change it
while 1 {
    send "passwd\r"
    expect "assword:"

    #enter password
    stty -echo
    expect_user -re "(.*)\n"
    set password $expect_out(1,string)
    stty echo

    send -- "$password\r"

    expect "assword:"

    #confirm password
    stty -echo
    expect_user -re "(.*)\n"
    set cpassword $expect_out(1,string)
    stty echo

    send -- "$cpassword\r\r"
    
    #if it works, continue. If not, restart loop
    expect {
	"changed by root" {break}
	"unchanged" {}
    }
}


#commits and reboots to save changes
send "uci commit
reboot
exit\r"

#gets the port number to set up the reverse ssh_tunnel
send_user "next step"
expect eof
send_user "What port number are you using?
\r"
expect_user -re "(.*)\n"
set port $expect_out(1,string)

#loop to wait for the router to reboot
while 1 {
spawn ssh root@192.168.5.1
    expect {
	"no)?" {send "yes\r"; send \003; break}
	"refused" {}
	"unreachable" {}
	":" {send \003; break}	
    }
}

#fire and forget
spawn ./pieces/config $port
while 1 {
    expect {
	"word:" {
	    send -- $password
	    send -- "\r"
	}
	"no)?" {
	    send "yes\r"
	}	
	"done!" {
	    break;
	}
	"(y/n)" {
	    send -- "y\r"
	}
    }
}

send_user "Your port number: $port"
send_user "Your password: $password"
